/*
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Copyright (c) 2025 Jesse Kane
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from this
 * software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS”
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

// This file was automatically generated by WIPS. Do not attempt to modify manually

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include "wips_runtime.h"
#include "apriltag_relative_pose_observation.wips.h"
#include "apriltag_field_pose_observation.wips.h"

typedef struct wips_pipeline_result {
    wips_u64_t timestamp;
    wips_u8_t pipeline_type;
    wips_u32_t DETAILvlasize__tag_poses;
    wips_apriltag_relative_pose_observation_t* tag_poses;
    wips_u8_t DETAILoptpresent__field_pose;
    wips_apriltag_field_pose_observation_t field_pose;
} wips_pipeline_result_t;

wips_pipeline_result_t* wips_pipeline_result_create();
void wips_pipeline_result_destroy(wips_pipeline_result_t* struct_ptr);

wips_u64_t wips_pipeline_result_get_timestamp(wips_pipeline_result_t* struct_ptr);
void wips_pipeline_result_set_timestamp(wips_pipeline_result_t* struct_ptr, wips_u64_t new);


wips_u8_t wips_pipeline_result_get_pipeline_type(wips_pipeline_result_t* struct_ptr);
void wips_pipeline_result_set_pipeline_type(wips_pipeline_result_t* struct_ptr, wips_u8_t new);


wips_u32_t wips_pipeline_result_get_DETAILvlasize__tag_poses(wips_pipeline_result_t* struct_ptr);
void wips_pipeline_result_set_DETAILvlasize__tag_poses(wips_pipeline_result_t* struct_ptr, wips_u32_t new);


wips_apriltag_relative_pose_observation_t* wips_pipeline_result_get_tag_poses(wips_pipeline_result_t* struct_ptr);
void wips_pipeline_result_set_tag_poses(wips_pipeline_result_t* struct_ptr, wips_apriltag_relative_pose_observation_t* new, wips_u32_t size);


wips_u8_t wips_pipeline_result_get_DETAILoptpresent__field_pose(wips_pipeline_result_t* struct_ptr);
void wips_pipeline_result_set_DETAILoptpresent__field_pose(wips_pipeline_result_t* struct_ptr, wips_u8_t new);


wips_apriltag_field_pose_observation_t wips_pipeline_result_get_field_pose(wips_pipeline_result_t* struct_ptr);
void wips_pipeline_result_set_field_pose(wips_pipeline_result_t* struct_ptr, wips_apriltag_field_pose_observation_t new);


size_t wips_encode_pipeline_result(wips_bin_t* data, wips_pipeline_result_t* in);
size_t wips_decode_pipeline_result(wips_pipeline_result_t* out, wips_bin_t* data);

#ifdef __cplusplus
}
#endif