/*
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Copyright (c) 2025 Jesse Kane
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from this
 * software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS”
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

// This file was automatically generated by WIPS. Do not attempt to modify manually

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include "wips_runtime.h"
#include "twist2.wips.h"

typedef struct wips_odometry_result {
    wips_u32_t DETAILvlasize__timestamps;
    wips_u64_t* timestamps;
    wips_u32_t DETAILvlasize__twists;
    wips_twist2_t* twists;
} wips_odometry_result_t;

// Recursive function to free all memory allocated by the struct and its members. Does NOT free the struct itself if it was dynamically allocated.
// Warning: Calling this function on a struct that has not been written to from a WIPS binary will result in undefined behavior.
// This function is intended to be used when the struct is no longer needed, to prevent memory leaks.
void wips_odometry_result_free_resources(wips_odometry_result_t* struct_ptr);
wips_odometry_result_t* wips_odometry_result_create();
void wips_odometry_result_destroy(wips_odometry_result_t* struct_ptr);

unsigned char wips_odometry_result_copy(wips_odometry_result_t* dest, const wips_odometry_result_t* src);

wips_status_t wips_encode_odometry_result(wips_blob_t* data, wips_odometry_result_t* in);
wips_status_t wips_decode_odometry_result(wips_odometry_result_t* out, wips_blob_t* data);

#ifdef __cplusplus
}
#endif