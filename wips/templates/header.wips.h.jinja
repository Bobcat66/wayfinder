/*
 * SPDX-License-Identifier: BSD-3-Clause
 *
 * Copyright (c) 2025 Jesse Kane
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 * 
 * 1. Redistributions of source code must retain the above copyright notice
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from this
 * software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS”
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

// This file was automatically generated by WIPS. Do not attempt to modify manually

#pragma once

#ifdef __cplusplus
extern "C" {
#endif

#include "wips_runtime.h"

{%- for dependency in dependencies %}
#include "{{ dependency.name }}.wips.h"
{%- endfor %}

typedef struct {
    {%- for field in fields %}
    {%- if field.vla == True %}
    {{ field | get_ctype_name }} *{{ field.name }};
    {%- else %}
    {{ field | get_ctype_name }} {{ field.name }};
    {%- endif %}
    {%- endfor %}
} wips_{{ name }}_t;

// Recursive function to free all memory allocated by the struct and its members. Does NOT free the struct itself if it was dynamically allocated.
// Warning: Calling this function on a struct that has not been written to from a WIPS binary will result in undefined behavior.
// This function is intended to be used when the struct is no longer needed, to prevent memory leaks.
void wips_{{ name }}_free_resources(wips_{{ name }}_t *struct_ptr);
wips_{{ name }}_t *wips_{{ name }}_create();
void wips_{{ name }}_destroy(wips_{{ name }}_t *struct_ptr);

wips_status_t wips_{{ name }}_copy(wips_{{ name }}_t *dest, const wips_{{ name }}_t *src);

wips_result_t wips_encode_{{ name }}(wips_blob_t *data, wips_{{ name }}_t *in);
wips_result_t wips_encode_nrb_{{ name }}(wips_blob_t *data, wips_{{ name }}_t *in);
wips_result_t wips_decode_{{ name }}(wips_{{ name }}_t *out, wips_blob_t *data);

extern wips_vlamethods_t wips_{{ name }}_vlamethods;

#ifdef __cplusplus
}
#endif