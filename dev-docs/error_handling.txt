A short note on best practices for exceptional cases in the Wayfinder codebase

There are multiple behaviors for exceptional cases in wayfinder:

1. Selective failfast: The preferred method to
handle an unrecoverable error is to selectively terminate the part
of wayfinder from which the error arose, without disrupting the
other parts of wayfinder. For example, if a camera is misconfigured
or disconnects, then it and any pipelines that depend on it should
be destroyed (or not created in the first place), while the
operation of other pipelines and cameras should remain unaffected.
Note that this termination must be complete, the pipelines and camera
handler should NOT be left in a half-valid state, and any references
to the camera or the pipeline should also be destroyed. The user
should be CLEARLY notified of the failure (preferably by printing
to the DS or the client), and information about the failure
should be recorded for posterity (to a file, not simply to memory).
During construction and configuration, errors can be propagated with exceptions, but
in runtime, StatusfulObject and friends are the preferred method to signal
errors

2. Recovery: If the error can be recovered from WITHOUT SILENTLY
RECONFIGURING WAYFINDER, then recovery is another potential 
exceptional behavior. This is preferred for robustness in cases where
the recovery logic imposes a minimal performance penalty, or when the
recovery is outside the hot path

3. Undefined Behavior: In extremely performance-critical sections that
are sufficiently isolated from the user (e.g. Serde code, internal pipeline
business logic, etc.) exceptional cases can be simply left undefined
(i.e. anything can happen and nothing is guaranteed). This should only be 
done in conjuntion with EXTENSIVE unit tests, and when correctness can
be guaranteed externally. Code with undefined exceptions should also make
heavy use of assertions, WF_DEBUGLOG, and ifndef NDEBUG blocks.

NOTE: Wayfinder's code as of now (Jul 10 2025), does not follow these rules.
This should be refactored before 1.0.